# structures/data_models.py
"""
Data models for the structure-centric trading system.
"""

from __future__ import annotations
from dataclasses import dataclass
from typing import Dict, List, Optional, Any, Union
import pandas as pd
from datetime import datetime


@dataclass
class StructureEvent:
    """Represents a detected structure pattern in market data."""

    symbol: str
    timestamp: pd.Timestamp
    structure_type: str  # e.g., "orb_breakout", "vwap_reclaim", "support_bounce"
    side: str  # "long" or "short"
    confidence: float  # 0.0 to 1.0

    # Structure-specific data
    levels: Dict[str, float]  # e.g., {"entry": 100.0, "stop": 99.0, "target": 102.0}
    context: Dict[str, Any]   # Additional context data

    # Market conditions at detection
    price: float
    volume: Optional[float] = None
    indicators: Optional[Dict[str, float]] = None


@dataclass
class MarketContext:
    """Market context for strategy planning."""

    symbol: str
    current_price: float
    timestamp: pd.Timestamp
    df_5m: pd.DataFrame
    session_date: datetime

    # Optional market data
    df_daily: Optional[pd.DataFrame] = None

    # Current session info
    orh: Optional[float] = None
    orl: Optional[float] = None

    # Previous day levels
    pdh: Optional[float] = None
    pdl: Optional[float] = None
    pdc: Optional[float] = None

    # Market regime
    regime: Optional[str] = None  # "trend", "chop", "squeeze"
    volatility: Optional[float] = None

    # Technical indicators
    indicators: Optional[Dict[str, float]] = None


@dataclass
class RiskParams:
    """Risk management parameters for a trade."""

    hard_sl: float  # Hard stop loss level
    risk_per_share: float  # Risk amount per share
    atr: Optional[float] = None  # ATR for context
    volatility_adj: Optional[float] = None  # Volatility adjustment factor

    # Position sizing
    max_position_size: Optional[int] = None
    risk_percentage: Optional[float] = None


@dataclass
class ExitLevels:
    """Exit levels and conditions for a trade."""

    # Target levels
    targets: List[Dict[str, Union[float, int]]]  # [{"level": 102.0, "qty_pct": 50, "rr": 2.0}]

    # Stop levels
    hard_sl: float
    trail_to: Optional[str] = None  # "breakeven", "t1", etc.

    # Exit conditions
    time_exit: Optional[str] = None  # Time-based exit
    structure_exit: Optional[Dict[str, Any]] = None  # Structure-based exit conditions


@dataclass
class TradePlan:
    """Complete trade plan generated by a structure."""

    # Basic trade info (required fields first)
    symbol: str
    side: str  # "long" or "short"
    structure_type: str
    entry_price: float
    risk_params: RiskParams
    exit_levels: ExitLevels
    qty: int
    notional: float
    confidence: float

    # Optional fields
    entry_zone: Optional[Dict[str, float]] = None  # {"min": 99.5, "max": 100.5}
    trade_id: Optional[str] = None
    timestamp: Optional[pd.Timestamp] = None
    market_context: Optional[MarketContext] = None
    notes: Optional[Dict[str, Any]] = None


@dataclass
class StructureAnalysis:
    """Analysis result from a structure detector."""

    structure_detected: bool
    events: List[StructureEvent]
    quality_score: float  # 0-100

    # Analysis details
    analysis_notes: Optional[Dict[str, Any]] = None
    rejection_reason: Optional[str] = None